{"version":3,"sources":["components/video_list/video_list.module.css","components/video_item/video_item.module.css","components/header/header.jsx","components/video_item/video_item.jsx","components/video_list/video_list.jsx","components/video_detail/video_detail.jsx","app.jsx","index.js","service/youtube.js","components/header/header.module.css","app.module.css"],"names":["module","exports","Header","memo","onSearch","onHomeClick","inputRef","useRef","console","log","className","styles","header","logo","onClick","title","onKeyPress","event","key","value","current","handleSearch","input","ref","type","placeholder","VideoItem","onVideoClick","videos","snippet","thumbnails","channelTitle","container","video","thumbnail","src","medium","url","alt","metadata","channel","VideoList","map","id","VideoDetail","width","height","frameBorder","allowFullScreen","description","App","youtube","useState","setVideos","selectedVideo","setSelectedVideo","home","useCallback","mostPopular","then","search","query","useEffect","app","content","detail","list","this","getRequestOptions","method","redirect","fetch","response","json","result","items","item","videoId","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ed12c00.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"videos\":\"video_list_videos__1VCw_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"video_item_container__15oji\",\"video\":\"video_item_video__37dg9\",\"title\":\"video_item_title__3lIaP\",\"channel\":\"video_item_channel__1dZ3U\",\"metadata\":\"video_item_metadata__N-I6a\",\"thumbnail\":\"video_item_thumbnail__1w2AL\"};","import React, { memo, useRef } from 'react';\nimport styles from \"./header.module.css\"\n\n\n// header안의 onsearch와 onhomeclick은 Props가 변경될일이 없기 떄문에 Memo \nconst Header = memo(({ onSearch, onHomeClick }) => {\n\n    const inputRef = useRef()\n\n    const handleSearch = () => {\n        const value = inputRef.current.value;\n        onSearch(value);\n    }\n\n    const onKeyPress = (event) => {\n        if (event.key === 'Enter') {\n            handleSearch();\n        }\n    }\n    console.log(\"header\");\n    return (\n\n        <header className={styles.header}>\n            <div className={styles.logo} onClick={onHomeClick}>\n                <h2 className={styles.title}>Youtube</h2>\n            </div>\n            <input onKeyPress={onKeyPress} className={styles.input} ref={inputRef} type=\"text\" placeholder=\"Search..\"></input>\n        </header>\n    )\n\n})\n\nexport default Header;","import React, { memo } from 'react';\n\n\nimport styles from \"./video_item.module.css\"\n\n\nconst VideoItem = memo(({ onVideoClick, videos, videos: { snippet: { title, thumbnails, channelTitle } } }) => {\n    console.log(\"item\");\n    return (\n        <li className={styles.container} onClick={() => onVideoClick(videos)}>\n            <div className={styles.video} >\n                <img className={styles.thumbnail} src={thumbnails.medium.url} alt={title}></img>\n                <div className={styles.metadata}>\n                    <p className={styles.title}>{title}</p>\n                    <p className={styles.channel}>{channelTitle}</p>\n                </div>\n            </div>\n        </li>\n    )\n})\n\nexport default VideoItem;","import React, { memo } from 'react';\nimport VideoItem from '../video_item/video_item';\nimport styles from \"./video_list.module.css\"\n\nconst VideoList = memo(({ videos, onVideoClick }) => {\n    console.log(\"list\");\n    return (\n\n        <ul className={styles.videos}>\n            { videos.map(video => <VideoItem key={video.id} videos={video} onVideoClick={onVideoClick} />)}\n        </ul >\n    )\n})\n\nexport default VideoList;","import React from 'react';\n\nconst VideoDetail = ({ video }) => {\n    console.log(\"detail\");\n    return (\n        <>\n            <iframe id=\"ytplayer\" title=\"yotube videoplayer\" type=\"text/html\" width=\"720\" height=\"405\"\n                src={`https://www.youtube.com/embed/${video.id}`}\n                frameBorder=\"0\" allowFullScreen></iframe>\n            <h2>{video.snippet.title}</h2>\n            <p>{video.snippet.channelTitle}</p>\n            <span>{video.snippet.description}</span>\n        </>\n    )\n}\n\nexport default VideoDetail;","import React, { useEffect, useState, useCallback } from \"react\"\nimport Header from \"./components/header/header\";\nimport VideoList from \"./components/video_list/video_list\";\nimport styles from \"./app.module.css\"\nimport VideoDetail from \"./components/video_detail/video_detail\";\n\nfunction App({ youtube }) {\n\n  // state ={} 와 같음. [변수명,변화를 적용할 변수명]\n  const [videos, setVideos] = useState([]);\n  const [selectedVideo, setSelectedVideo] = useState(null)\n\n  // app이 전체를 리렌더링 할때 app의 오브젝트가 바껴서 header에서 memo를 써도\n  // app의 object의 ref props주소가 변경이 되어서\n  // memo를 쓴 의미가 사라짐. 그래서 useCallbakc을씀\n  const home = useCallback(() => {\n    console.log(\"home\");\n    setSelectedVideo(null)\n    setVideos([])\n    youtube//\n      .mostPopular() //\n      .then(videos => setVideos(videos))\n  }, [youtube])\n\n  const search = useCallback(query => {\n    console.log(\"search\");\n    youtube//\n      .search(query)//\n      .then(videos => setVideos(videos))\n  }, [youtube])\n\n  const selectVideo = (video) => {\n    console.log(\"select\");\n    setSelectedVideo(video)\n  }\n\n\n  // didmount upadate의 2가지 기능을 가지고있음 , 2번째 인자는 어떤것이 업데이트될때 2가지 기능을 업데이트할건지 정함\n  useEffect(() => {\n    console.log(\"useEffect\");\n    youtube//\n      .mostPopular() //\n      .then(videos => setVideos(videos))\n  }, [youtube])\n\n  console.log(\"app\");\n  return (\n    <div className={styles.app}>\n      <Header onSearch={search} onHomeClick={home} />\n      <section className={styles.content}>\n        {selectedVideo && (\n          <div className={styles.detail}>\n            <VideoDetail video={selectedVideo} />\n          </div>\n        )}\n        <div className={styles.list}>\n          <VideoList videos={videos} onVideoClick={selectVideo} />\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app\";\nimport Youtube from \"./service/youtube\";\n\nconst youtube = new Youtube(process.env.REACT_APP_YOUTUBE_API_KEY);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App youtube={youtube} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","class Youtube {\n  constructor(key) {\n    this.key = key;\n    this.getRequestOptions = {\n      method: \"GET\",\n      redirect: \"follow\",\n    };\n  }\n\n  async mostPopular() {\n    return (\n      fetch(\n        `https://www.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&chart=mostPopular&maxResults=25&regionCode=KR&key=${this.key}`,\n        this.getRequestOptions\n      )\n        // response.text 는 text형태로오는데\n        // json으로 변경하여 값에 접근하기 더 쉽게변경함\n        .then((response) => response.json())\n        .then((result) => result.items)\n    );\n  }\n\n  async search(query) {\n    const response = await fetch(\n      `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&q=${query}&type=video&key=${this.key}`,\n      this.getRequestOptions\n    );\n    const result = await response.json();\n    return result.items.map((item) => ({ ...item, id: item.id.videoId }));\n  }\n}\n\nexport default Youtube;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__v9FKw\",\"logo\":\"header_logo__1X7aW\",\"input\":\"header_input__2cfQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"content\":\"app_content__ckDFI\",\"detail\":\"app_detail__Xmsnl\"};"],"sourceRoot":""}